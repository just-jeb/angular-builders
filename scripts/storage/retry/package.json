{
	"name": "retry",
	"versions": {
		"0.0.1": {
			"author": {
				"name": "Tim Koschützki",
				"email": "tim@debuggable.com",
				"url": "http://debuggable.com/"
			},
			"name": "retry",
			"description": "Abstraction for exponential and custom retry strategies for failed operations.",
			"version": "0.0.1",
			"homepage": "https://github.com/felixge/node-retry",
			"repository": {
				"type": "git",
				"url": "git://github.com/felixge/node-retry.git"
			},
			"directories": {
				"lib": "./lib"
			},
			"main": "index",
			"engines": {
				"node": "*"
			},
			"dependencies": {},
			"devDependencies": {},
			"_id": "retry@0.0.1",
			"_engineSupported": true,
			"_npmVersion": "1.0.5",
			"_nodeVersion": "v0.4.8-pre",
			"_defaultsLoaded": true,
			"dist": {
				"shasum": "d47a1e527644e131e8f54785452ec7cd410808fe",
				"tarball": "https://registry.npmjs.org/retry/-/retry-0.0.1.tgz"
			},
			"scripts": {},
			"contributors": []
		},
		"0.1.0": {
			"author": {
				"name": "Tim Koschützki",
				"email": "tim@debuggable.com",
				"url": "http://debuggable.com/"
			},
			"name": "retry",
			"description": "Abstraction for exponential and custom retry strategies for failed operations.",
			"version": "0.1.0",
			"homepage": "https://github.com/felixge/node-retry",
			"repository": {
				"type": "git",
				"url": "git://github.com/felixge/node-retry.git"
			},
			"directories": {
				"lib": "./lib"
			},
			"main": "index",
			"engines": {
				"node": "*"
			},
			"dependencies": {},
			"devDependencies": {
				"fake": "0.2.0",
				"far": "0.0.1"
			},
			"_id": "retry@0.1.0",
			"_engineSupported": true,
			"_npmVersion": "1.0.5",
			"_nodeVersion": "v0.4.8-pre",
			"_defaultsLoaded": true,
			"dist": {
				"shasum": "e97a7b06a889a62b3f7ea16003f52a699c3651a5",
				"tarball": "https://registry.npmjs.org/retry/-/retry-0.1.0.tgz"
			},
			"scripts": {},
			"contributors": []
		},
		"0.2.0": {
			"author": {
				"name": "Tim Koschützki",
				"email": "tim@debuggable.com",
				"url": "http://debuggable.com/"
			},
			"name": "retry",
			"description": "Abstraction for exponential and custom retry strategies for failed operations.",
			"version": "0.2.0",
			"homepage": "https://github.com/felixge/node-retry",
			"repository": {
				"type": "git",
				"url": "git://github.com/felixge/node-retry.git"
			},
			"directories": {
				"lib": "./lib"
			},
			"main": "index",
			"engines": {
				"node": "*"
			},
			"dependencies": {},
			"devDependencies": {
				"fake": "0.2.0",
				"far": "0.0.1"
			},
			"_id": "retry@0.2.0",
			"_engineSupported": true,
			"_npmVersion": "1.0.5",
			"_nodeVersion": "v0.4.8-pre",
			"_defaultsLoaded": true,
			"dist": {
				"shasum": "9598e6667c197772ea24ab5fc9e5445c0a4ac9a5",
				"tarball": "https://registry.npmjs.org/retry/-/retry-0.2.0.tgz"
			},
			"scripts": {},
			"contributors": []
		},
		"0.3.0": {
			"author": {
				"name": "Tim Koschützki",
				"email": "tim@debuggable.com",
				"url": "http://debuggable.com/"
			},
			"name": "retry",
			"description": "Abstraction for exponential and custom retry strategies for failed operations.",
			"version": "0.3.0",
			"homepage": "https://github.com/felixge/node-retry",
			"repository": {
				"type": "git",
				"url": "git://github.com/felixge/node-retry.git"
			},
			"directories": {
				"lib": "./lib"
			},
			"main": "index",
			"engines": {
				"node": "*"
			},
			"dependencies": {},
			"devDependencies": {
				"fake": "0.2.0",
				"far": "0.0.1"
			},
			"_id": "retry@0.3.0",
			"_engineSupported": true,
			"_npmVersion": "1.0.5",
			"_nodeVersion": "v0.4.8-pre",
			"_defaultsLoaded": true,
			"dist": {
				"shasum": "902e4fc3e6c48d52badfec738be656b8ca23844c",
				"tarball": "https://registry.npmjs.org/retry/-/retry-0.3.0.tgz"
			},
			"scripts": {},
			"contributors": []
		},
		"0.4.0": {
			"author": {
				"name": "Tim Koschützki",
				"email": "tim@debuggable.com",
				"url": "http://debuggable.com/"
			},
			"name": "retry",
			"description": "Abstraction for exponential and custom retry strategies for failed operations.",
			"version": "0.4.0",
			"homepage": "https://github.com/felixge/node-retry",
			"repository": {
				"type": "git",
				"url": "git://github.com/felixge/node-retry.git"
			},
			"directories": {
				"lib": "./lib"
			},
			"main": "index",
			"engines": {
				"node": "*"
			},
			"dependencies": {},
			"devDependencies": {
				"fake": "0.2.0",
				"far": "0.0.1"
			},
			"_id": "retry@0.4.0",
			"_engineSupported": true,
			"_npmVersion": "1.0.5",
			"_nodeVersion": "v0.4.8-pre",
			"_defaultsLoaded": true,
			"dist": {
				"shasum": "f6a0107aee4d4e5bd5469e1d31c780e438d154bd",
				"tarball": "https://registry.npmjs.org/retry/-/retry-0.4.0.tgz"
			},
			"scripts": {},
			"contributors": []
		},
		"0.5.0": {
			"author": {
				"name": "Tim Koschützki",
				"email": "tim@debuggable.com",
				"url": "http://debuggable.com/"
			},
			"name": "retry",
			"description": "Abstraction for exponential and custom retry strategies for failed operations.",
			"version": "0.5.0",
			"homepage": "https://github.com/felixge/node-retry",
			"repository": {
				"type": "git",
				"url": "git://github.com/felixge/node-retry.git"
			},
			"directories": {
				"lib": "./lib"
			},
			"main": "index",
			"engines": {
				"node": "*"
			},
			"dependencies": {},
			"devDependencies": {
				"fake": "0.2.0",
				"far": "0.0.1"
			},
			"_npmUser": {
				"name": "tim-kos",
				"email": "tim@debuggable.com"
			},
			"_id": "retry@0.5.0",
			"_engineSupported": true,
			"_npmVersion": "1.0.103",
			"_nodeVersion": "v0.4.12",
			"_defaultsLoaded": true,
			"dist": {
				"shasum": "71e2793cd3e2ee9cce1182e173183af959decc3d",
				"tarball": "https://registry.npmjs.org/retry/-/retry-0.5.0.tgz"
			},
			"maintainers": [
				{
					"name": "tim-kos",
					"email": "tim@debuggable.com"
				}
			],
			"contributors": []
		},
		"0.6.0": {
			"author": {
				"name": "Tim Koschützki",
				"email": "tim@debuggable.com",
				"url": "http://debuggable.com/"
			},
			"name": "retry",
			"description": "Abstraction for exponential and custom retry strategies for failed operations.",
			"version": "0.6.0",
			"homepage": "https://github.com/tim-kos/node-retry",
			"repository": {
				"type": "git",
				"url": "git://github.com/felixge/node-retry.git"
			},
			"directories": {
				"lib": "./lib"
			},
			"main": "index",
			"engines": {
				"node": "*"
			},
			"dependencies": {},
			"devDependencies": {
				"fake": "0.2.0",
				"far": "0.0.1"
			},
			"_npmUser": {
				"name": "tim-kos",
				"email": "tim@debuggable.com"
			},
			"_id": "retry@0.6.0",
			"_engineSupported": true,
			"_npmVersion": "1.0.103",
			"_nodeVersion": "v0.4.12",
			"_defaultsLoaded": true,
			"dist": {
				"shasum": "1c010713279a6fd1e8def28af0c3ff1871caa537",
				"tarball": "https://registry.npmjs.org/retry/-/retry-0.6.0.tgz"
			},
			"maintainers": [
				{
					"name": "tim-kos",
					"email": "tim@debuggable.com"
				}
			],
			"contributors": []
		},
		"0.6.1": {
			"author": {
				"name": "Tim Koschützki",
				"email": "tim@debuggable.com",
				"url": "http://debuggable.com/"
			},
			"name": "retry",
			"description": "Abstraction for exponential and custom retry strategies for failed operations.",
			"version": "0.6.1",
			"homepage": "https://github.com/tim-kos/node-retry",
			"repository": {
				"type": "git",
				"url": "git://github.com/tim-kos/node-retry.git"
			},
			"directories": {
				"lib": "./lib"
			},
			"main": "index",
			"engines": {
				"node": "*"
			},
			"dependencies": {},
			"devDependencies": {
				"fake": "0.2.0",
				"far": "0.0.1"
			},
			"bugs": {
				"url": "https://github.com/tim-kos/node-retry/issues"
			},
			"_id": "retry@0.6.1",
			"_shasum": "fdc90eed943fde11b893554b8cc63d0e899ba918",
			"_from": ".",
			"_npmVersion": "1.4.9",
			"_npmUser": {
				"name": "tim-kos",
				"email": "tim@debuggable.com"
			},
			"maintainers": [
				{
					"name": "tim-kos",
					"email": "tim@debuggable.com"
				}
			],
			"dist": {
				"shasum": "fdc90eed943fde11b893554b8cc63d0e899ba918",
				"tarball": "https://registry.npmjs.org/retry/-/retry-0.6.1.tgz"
			},
			"contributors": []
		},
		"0.7.0": {
			"author": {
				"name": "Tim Koschützki",
				"email": "tim@debuggable.com",
				"url": "http://debuggable.com/"
			},
			"name": "retry",
			"description": "Abstraction for exponential and custom retry strategies for failed operations.",
			"license": "MIT",
			"version": "0.7.0",
			"homepage": "https://github.com/tim-kos/node-retry",
			"repository": {
				"type": "git",
				"url": "git://github.com/tim-kos/node-retry.git"
			},
			"directories": {
				"lib": "./lib"
			},
			"main": "index",
			"engines": {
				"node": "*"
			},
			"dependencies": {},
			"devDependencies": {
				"fake": "0.2.0",
				"far": "0.0.1"
			},
			"gitHead": "24d1e61f57423286e2d47fedd48876450a19a923",
			"bugs": {
				"url": "https://github.com/tim-kos/node-retry/issues"
			},
			"_id": "retry@0.7.0",
			"scripts": {},
			"_shasum": "dc86eeb960af9acb662896918be4254c1acf6379",
			"_from": ".",
			"_npmVersion": "2.1.7",
			"_nodeVersion": "0.10.33",
			"_npmUser": {
				"name": "tim-kos",
				"email": "tim@debuggable.com"
			},
			"maintainers": [
				{
					"name": "tim-kos",
					"email": "tim@debuggable.com"
				}
			],
			"dist": {
				"shasum": "dc86eeb960af9acb662896918be4254c1acf6379",
				"tarball": "https://registry.npmjs.org/retry/-/retry-0.7.0.tgz"
			},
			"contributors": []
		},
		"0.8.0": {
			"author": {
				"name": "Tim Koschützki",
				"email": "tim@debuggable.com",
				"url": "http://debuggable.com/"
			},
			"name": "retry",
			"description": "Abstraction for exponential and custom retry strategies for failed operations.",
			"license": "MIT",
			"version": "0.8.0",
			"homepage": "https://github.com/tim-kos/node-retry",
			"repository": {
				"type": "git",
				"url": "git://github.com/tim-kos/node-retry.git"
			},
			"directories": {
				"lib": "./lib"
			},
			"main": "index",
			"engines": {
				"node": "*"
			},
			"dependencies": {},
			"devDependencies": {
				"fake": "0.2.0",
				"far": "0.0.1"
			},
			"gitHead": "9446e803d6a41ae08732a4a215ae5bf1ff1ccfdd",
			"bugs": {
				"url": "https://github.com/tim-kos/node-retry/issues"
			},
			"_id": "retry@0.8.0",
			"scripts": {},
			"_shasum": "2367628dc0edb247b1eab649dc53ac8628ac2d5f",
			"_from": ".",
			"_npmVersion": "2.1.7",
			"_nodeVersion": "0.10.33",
			"_npmUser": {
				"name": "tim-kos",
				"email": "tim@debuggable.com"
			},
			"maintainers": [
				{
					"name": "tim-kos",
					"email": "tim@debuggable.com"
				}
			],
			"dist": {
				"shasum": "2367628dc0edb247b1eab649dc53ac8628ac2d5f",
				"tarball": "https://registry.npmjs.org/retry/-/retry-0.8.0.tgz"
			},
			"contributors": []
		},
		"0.9.0": {
			"author": {
				"name": "Tim Koschützki",
				"email": "tim@debuggable.com",
				"url": "http://debuggable.com/"
			},
			"name": "retry",
			"description": "Abstraction for exponential and custom retry strategies for failed operations.",
			"license": "MIT",
			"version": "0.9.0",
			"homepage": "https://github.com/tim-kos/node-retry",
			"repository": {
				"type": "git",
				"url": "git://github.com/tim-kos/node-retry.git"
			},
			"directories": {
				"lib": "./lib"
			},
			"main": "index",
			"engines": {
				"node": "*"
			},
			"dependencies": {},
			"devDependencies": {
				"fake": "0.2.0",
				"far": "0.0.1"
			},
			"gitHead": "1b621cf499ef7647d005e3650006b93a8dbeb986",
			"bugs": {
				"url": "https://github.com/tim-kos/node-retry/issues"
			},
			"_id": "retry@0.9.0",
			"scripts": {},
			"_shasum": "6f697e50a0e4ddc8c8f7fb547a9b60dead43678d",
			"_from": ".",
			"_npmVersion": "2.1.7",
			"_nodeVersion": "4.2.1",
			"_npmUser": {
				"name": "tim-kos",
				"email": "tim@debuggable.com"
			},
			"maintainers": [
				{
					"name": "tim-kos",
					"email": "tim@debuggable.com"
				}
			],
			"dist": {
				"shasum": "6f697e50a0e4ddc8c8f7fb547a9b60dead43678d",
				"tarball": "https://registry.npmjs.org/retry/-/retry-0.9.0.tgz"
			},
			"contributors": []
		},
		"0.10.0": {
			"author": {
				"name": "Tim Koschützki",
				"email": "tim@debuggable.com",
				"url": "http://debuggable.com/"
			},
			"name": "retry",
			"description": "Abstraction for exponential and custom retry strategies for failed operations.",
			"license": "MIT",
			"version": "0.10.0",
			"homepage": "https://github.com/tim-kos/node-retry",
			"repository": {
				"type": "git",
				"url": "git://github.com/tim-kos/node-retry.git"
			},
			"directories": {
				"lib": "./lib"
			},
			"main": "index",
			"engines": {
				"node": "*"
			},
			"dependencies": {},
			"devDependencies": {
				"fake": "0.2.0",
				"far": "0.0.1"
			},
			"gitHead": "0616e6a6ebc49b5a36b619c8f7c414ced8c3813b",
			"bugs": {
				"url": "https://github.com/tim-kos/node-retry/issues"
			},
			"_id": "retry@0.10.0",
			"scripts": {},
			"_shasum": "649e15ca408422d98318161935e7f7d652d435dd",
			"_from": ".",
			"_npmVersion": "2.1.7",
			"_nodeVersion": "4.2.1",
			"_npmUser": {
				"name": "tim-kos",
				"email": "tim@debuggable.com"
			},
			"maintainers": [
				{
					"name": "tim-kos",
					"email": "tim@debuggable.com"
				}
			],
			"dist": {
				"shasum": "649e15ca408422d98318161935e7f7d652d435dd",
				"tarball": "https://registry.npmjs.org/retry/-/retry-0.10.0.tgz"
			},
			"_npmOperationalInternal": {
				"host": "packages-12-west.internal.npmjs.com",
				"tmp": "tmp/retry-0.10.0.tgz_1471682099847_0.5031970851123333"
			},
			"contributors": []
		},
		"0.10.1": {
			"author": {
				"name": "Tim Koschützki",
				"email": "tim@debuggable.com",
				"url": "http://debuggable.com/"
			},
			"name": "retry",
			"description": "Abstraction for exponential and custom retry strategies for failed operations.",
			"license": "MIT",
			"version": "0.10.1",
			"homepage": "https://github.com/tim-kos/node-retry",
			"repository": {
				"type": "git",
				"url": "git://github.com/tim-kos/node-retry.git"
			},
			"directories": {
				"lib": "./lib"
			},
			"main": "index",
			"engines": {
				"node": "*"
			},
			"dependencies": {},
			"devDependencies": {
				"fake": "0.2.0",
				"far": "0.0.1"
			},
			"gitHead": "3dbe5189b48786e56d1d1807731adfc53a70eeae",
			"bugs": {
				"url": "https://github.com/tim-kos/node-retry/issues"
			},
			"_id": "retry@0.10.1",
			"scripts": {},
			"_shasum": "e76388d217992c252750241d3d3956fed98d8ff4",
			"_from": ".",
			"_npmVersion": "2.15.9",
			"_nodeVersion": "4.6.0",
			"_npmUser": {
				"name": "tim-kos",
				"email": "tim@debuggable.com"
			},
			"maintainers": [
				{
					"name": "tim-kos",
					"email": "tim@debuggable.com"
				}
			],
			"dist": {
				"shasum": "e76388d217992c252750241d3d3956fed98d8ff4",
				"tarball": "https://registry.npmjs.org/retry/-/retry-0.10.1.tgz"
			},
			"_npmOperationalInternal": {
				"host": "packages-12-west.internal.npmjs.com",
				"tmp": "tmp/retry-0.10.1.tgz_1481556523726_0.45345148630440235"
			},
			"contributors": []
		},
		"0.12.0": {
			"author": {
				"name": "Tim Koschützki",
				"email": "tim@debuggable.com",
				"url": "http://debuggable.com/"
			},
			"name": "retry",
			"description": "Abstraction for exponential and custom retry strategies for failed operations.",
			"license": "MIT",
			"version": "0.12.0",
			"homepage": "https://github.com/tim-kos/node-retry",
			"repository": {
				"type": "git",
				"url": "git://github.com/tim-kos/node-retry.git"
			},
			"directories": {
				"lib": "./lib"
			},
			"main": "index",
			"engines": {
				"node": ">= 4"
			},
			"dependencies": {},
			"devDependencies": {
				"fake": "0.2.0",
				"istanbul": "^0.4.5",
				"tape": "^4.8.0"
			},
			"scripts": {
				"test": "istanbul cover ./node_modules/tape/bin/tape ./test/integration/*.js",
				"release:major": "env SEMANTIC=major npm run release",
				"release:minor": "env SEMANTIC=minor npm run release",
				"release:patch": "env SEMANTIC=patch npm run release",
				"release": "npm version ${SEMANTIC:-patch} -m \"Release %s\" && git push && git push --tags && npm publish"
			},
			"gitHead": "f802d9edc2fdbca727d3e368234b6d714db06f8e",
			"bugs": {
				"url": "https://github.com/tim-kos/node-retry/issues"
			},
			"_id": "retry@0.12.0",
			"_shasum": "1b42a6266a21f07421d1b0b54b7dc167b01c013b",
			"_from": ".",
			"_npmVersion": "4.1.2",
			"_nodeVersion": "6.10.0",
			"_npmUser": {
				"name": "tim-kos",
				"email": "tim@transloadit.com"
			},
			"dist": {
				"shasum": "1b42a6266a21f07421d1b0b54b7dc167b01c013b",
				"tarball": "https://registry.npmjs.org/retry/-/retry-0.12.0.tgz",
				"fileCount": 17,
				"unpackedSize": 32210
			},
			"maintainers": [
				{
					"name": "tim-kos",
					"email": "tim@debuggable.com"
				}
			],
			"_npmOperationalInternal": {
				"host": "s3://npm-registry-packages",
				"tmp": "tmp/retry_0.12.0_1523266527484_0.8738449656621592"
			},
			"contributors": []
		}
	},
	"time": {
		"modified": "2018-08-03T00:39:14.881Z",
		"created": "2011-05-13T11:26:52.829Z",
		"0.0.1": "2011-05-13T11:26:53.515Z",
		"0.1.0": "2011-05-16T08:10:27.648Z",
		"0.2.0": "2011-05-16T14:32:52.025Z",
		"0.3.0": "2011-05-31T14:19:32.882Z",
		"0.4.0": "2011-06-05T08:07:17.763Z",
		"0.5.0": "2011-11-03T10:55:32.772Z",
		"0.6.0": "2012-02-14T08:34:18.028Z",
		"0.6.1": "2014-06-26T12:00:56.230Z",
		"0.7.0": "2015-09-01T10:16:42.770Z",
		"0.8.0": "2015-09-16T18:34:56.522Z",
		"0.9.0": "2016-01-26T12:02:25.243Z",
		"0.10.0": "2016-08-20T08:35:01.550Z",
		"0.10.1": "2016-12-12T15:28:45.566Z",
		"0.12.0": "2018-04-09T09:35:27.678Z"
	},
	"users": {},
	"dist-tags": {
		"latest": "0.12.0"
	},
	"_uplinks": {
		"npmjs": {
			"etag": "W/\"125b12d7995dc62ea7d01d1fd82f6529\"",
			"fetched": 1577117277554
		}
	},
	"_distfiles": {
		"retry-0.0.1.tgz": {
			"url": "https://registry.npmjs.org/retry/-/retry-0.0.1.tgz",
			"sha": "d47a1e527644e131e8f54785452ec7cd410808fe",
			"registry": "npmjs"
		},
		"retry-0.1.0.tgz": {
			"url": "https://registry.npmjs.org/retry/-/retry-0.1.0.tgz",
			"sha": "e97a7b06a889a62b3f7ea16003f52a699c3651a5",
			"registry": "npmjs"
		},
		"retry-0.2.0.tgz": {
			"url": "https://registry.npmjs.org/retry/-/retry-0.2.0.tgz",
			"sha": "9598e6667c197772ea24ab5fc9e5445c0a4ac9a5",
			"registry": "npmjs"
		},
		"retry-0.3.0.tgz": {
			"url": "https://registry.npmjs.org/retry/-/retry-0.3.0.tgz",
			"sha": "902e4fc3e6c48d52badfec738be656b8ca23844c",
			"registry": "npmjs"
		},
		"retry-0.4.0.tgz": {
			"url": "https://registry.npmjs.org/retry/-/retry-0.4.0.tgz",
			"sha": "f6a0107aee4d4e5bd5469e1d31c780e438d154bd",
			"registry": "npmjs"
		},
		"retry-0.5.0.tgz": {
			"url": "https://registry.npmjs.org/retry/-/retry-0.5.0.tgz",
			"sha": "71e2793cd3e2ee9cce1182e173183af959decc3d",
			"registry": "npmjs"
		},
		"retry-0.6.0.tgz": {
			"url": "https://registry.npmjs.org/retry/-/retry-0.6.0.tgz",
			"sha": "1c010713279a6fd1e8def28af0c3ff1871caa537",
			"registry": "npmjs"
		},
		"retry-0.6.1.tgz": {
			"url": "https://registry.npmjs.org/retry/-/retry-0.6.1.tgz",
			"sha": "fdc90eed943fde11b893554b8cc63d0e899ba918",
			"registry": "npmjs"
		},
		"retry-0.7.0.tgz": {
			"url": "https://registry.npmjs.org/retry/-/retry-0.7.0.tgz",
			"sha": "dc86eeb960af9acb662896918be4254c1acf6379",
			"registry": "npmjs"
		},
		"retry-0.8.0.tgz": {
			"url": "https://registry.npmjs.org/retry/-/retry-0.8.0.tgz",
			"sha": "2367628dc0edb247b1eab649dc53ac8628ac2d5f",
			"registry": "npmjs"
		},
		"retry-0.9.0.tgz": {
			"url": "https://registry.npmjs.org/retry/-/retry-0.9.0.tgz",
			"sha": "6f697e50a0e4ddc8c8f7fb547a9b60dead43678d",
			"registry": "npmjs"
		},
		"retry-0.10.0.tgz": {
			"url": "https://registry.npmjs.org/retry/-/retry-0.10.0.tgz",
			"sha": "649e15ca408422d98318161935e7f7d652d435dd",
			"registry": "npmjs"
		},
		"retry-0.10.1.tgz": {
			"url": "https://registry.npmjs.org/retry/-/retry-0.10.1.tgz",
			"sha": "e76388d217992c252750241d3d3956fed98d8ff4",
			"registry": "npmjs"
		},
		"retry-0.12.0.tgz": {
			"url": "https://registry.npmjs.org/retry/-/retry-0.12.0.tgz",
			"sha": "1b42a6266a21f07421d1b0b54b7dc167b01c013b",
			"registry": "npmjs"
		}
	},
	"_attachments": {},
	"_rev": "2-a7a5a39492600564",
	"_id": "retry",
	"readme": "<!-- badges/ -->\n[![Build Status](https://secure.travis-ci.org/tim-kos/node-retry.png?branch=master)](http://travis-ci.org/tim-kos/node-retry \"Check this project's build status on TravisCI\")\n[![codecov](https://codecov.io/gh/tim-kos/node-retry/branch/master/graph/badge.svg)](https://codecov.io/gh/tim-kos/node-retry)\n<!-- /badges -->\n\n# retry\n\nAbstraction for exponential and custom retry strategies for failed operations.\n\n## Installation\n\n    npm install retry\n\n## Current Status\n\nThis module has been tested and is ready to be used.\n\n## Tutorial\n\nThe example below will retry a potentially failing `dns.resolve` operation\n`10` times using an exponential backoff strategy. With the default settings, this\nmeans the last attempt is made after `17 minutes and 3 seconds`.\n\n``` javascript\nvar dns = require('dns');\nvar retry = require('retry');\n\nfunction faultTolerantResolve(address, cb) {\n  var operation = retry.operation();\n\n  operation.attempt(function(currentAttempt) {\n    dns.resolve(address, function(err, addresses) {\n      if (operation.retry(err)) {\n        return;\n      }\n\n      cb(err ? operation.mainError() : null, addresses);\n    });\n  });\n}\n\nfaultTolerantResolve('nodejs.org', function(err, addresses) {\n  console.log(err, addresses);\n});\n```\n\nOf course you can also configure the factors that go into the exponential\nbackoff. See the API documentation below for all available settings.\ncurrentAttempt is an int representing the number of attempts so far.\n\n``` javascript\nvar operation = retry.operation({\n  retries: 5,\n  factor: 3,\n  minTimeout: 1 * 1000,\n  maxTimeout: 60 * 1000,\n  randomize: true,\n});\n```\n\n## API\n\n### retry.operation([options])\n\nCreates a new `RetryOperation` object. `options` is the same as `retry.timeouts()`'s `options`, with two additions:\n\n* `forever`: Whether to retry forever, defaults to `false`.\n* `unref`: Whether to [unref](https://nodejs.org/api/timers.html#timers_unref) the setTimeout's, defaults to `false`.\n* `maxRetryTime`: The maximum time (in milliseconds) that the retried operation is allowed to run. Default is `Infinity`.  \n\n### retry.timeouts([options])\n\nReturns an array of timeouts. All time `options` and return values are in\nmilliseconds. If `options` is an array, a copy of that array is returned.\n\n`options` is a JS object that can contain any of the following keys:\n\n* `retries`: The maximum amount of times to retry the operation. Default is `10`. Seting this to `1` means `do it once, then retry it once`.\n* `factor`: The exponential factor to use. Default is `2`.\n* `minTimeout`: The number of milliseconds before starting the first retry. Default is `1000`.\n* `maxTimeout`: The maximum number of milliseconds between two retries. Default is `Infinity`.\n* `randomize`: Randomizes the timeouts by multiplying with a factor between `1` to `2`. Default is `false`.\n\nThe formula used to calculate the individual timeouts is:\n\n```\nMath.min(random * minTimeout * Math.pow(factor, attempt), maxTimeout)\n```\n\nHave a look at [this article][article] for a better explanation of approach.\n\nIf you want to tune your `factor` / `times` settings to attempt the last retry\nafter a certain amount of time, you can use wolfram alpha. For example in order\nto tune for `10` attempts in `5 minutes`, you can use this equation:\n\n![screenshot](https://github.com/tim-kos/node-retry/raw/master/equation.gif)\n\nExplaining the various values from left to right:\n\n* `k = 0 ... 9`:  The `retries` value (10)\n* `1000`: The `minTimeout` value in ms (1000)\n* `x^k`: No need to change this, `x` will be your resulting factor\n* `5 * 60 * 1000`: The desired total amount of time for retrying in ms (5 minutes)\n\nTo make this a little easier for you, use wolfram alpha to do the calculations:\n\n<http://www.wolframalpha.com/input/?i=Sum%5B1000*x^k%2C+{k%2C+0%2C+9}%5D+%3D+5+*+60+*+1000>\n\n[article]: http://dthain.blogspot.com/2009/02/exponential-backoff-in-distributed.html\n\n### retry.createTimeout(attempt, opts)\n\nReturns a new `timeout` (integer in milliseconds) based on the given parameters.\n\n`attempt` is an integer representing for which retry the timeout should be calculated. If your retry operation was executed 4 times you had one attempt and 3 retries. If you then want to calculate a new timeout, you should set `attempt` to 4 (attempts are zero-indexed).\n\n`opts` can include `factor`, `minTimeout`, `randomize` (boolean) and `maxTimeout`. They are documented above.\n\n`retry.createTimeout()` is used internally by `retry.timeouts()` and is public for you to be able to create your own timeouts for reinserting an item, see [issue #13](https://github.com/tim-kos/node-retry/issues/13).\n\n### retry.wrap(obj, [options], [methodNames])\n\nWrap all functions of the `obj` with retry. Optionally you can pass operation options and\nan array of method names which need to be wrapped.\n\n```\nretry.wrap(obj)\n\nretry.wrap(obj, ['method1', 'method2'])\n\nretry.wrap(obj, {retries: 3})\n\nretry.wrap(obj, {retries: 3}, ['method1', 'method2'])\n```\nThe `options` object can take any options that the usual call to `retry.operation` can take.\n\n### new RetryOperation(timeouts, [options])\n\nCreates a new `RetryOperation` where `timeouts` is an array where each value is\na timeout given in milliseconds.\n\nAvailable options:\n* `forever`: Whether to retry forever, defaults to `false`.\n* `unref`: Wether to [unref](https://nodejs.org/api/timers.html#timers_unref) the setTimeout's, defaults to `false`.\n\nIf `forever` is true, the following changes happen:\n* `RetryOperation.errors()` will only output an array of one item: the last error.\n* `RetryOperation` will repeatedly use the `timeouts` array. Once all of its timeouts have been used up, it restarts with the first timeout, then uses the second and so on.\n\n#### retryOperation.errors()\n\nReturns an array of all errors that have been passed to `retryOperation.retry()` so far. The\nreturning array has the errors ordered chronologically based on when they were passed to\n`retryOperation.retry()`, which means the first passed error is at index zero and the last is\nat the last index.\n\n#### retryOperation.mainError()\n\nA reference to the error object that occured most frequently. Errors are\ncompared using the `error.message` property.\n\nIf multiple error messages occured the same amount of time, the last error\nobject with that message is returned.\n\nIf no errors occured so far, the value is `null`.\n\n#### retryOperation.attempt(fn, timeoutOps)\n\nDefines the function `fn` that is to be retried and executes it for the first\ntime right away. The `fn` function can receive an optional `currentAttempt` callback that represents the number of attempts to execute `fn` so far.\n\nOptionally defines `timeoutOps` which is an object having a property `timeout` in miliseconds and a property `cb` callback function.\nWhenever your retry operation takes longer than `timeout` to execute, the timeout callback function `cb` is called.\n\n\n#### retryOperation.try(fn)\n\nThis is an alias for `retryOperation.attempt(fn)`. This is deprecated. Please use `retryOperation.attempt(fn)` instead.\n\n#### retryOperation.start(fn)\n\nThis is an alias for `retryOperation.attempt(fn)`. This is deprecated. Please use `retryOperation.attempt(fn)` instead.\n\n#### retryOperation.retry(error)\n\nReturns `false` when no `error` value is given, or the maximum amount of retries\nhas been reached.\n\nOtherwise it returns `true`, and retries the operation after the timeout for\nthe current attempt number.\n\n#### retryOperation.stop()\n\nAllows you to stop the operation being retried. Useful for aborting the operation on a fatal error etc.\n\n#### retryOperation.reset()\n\nResets the internal state of the operation object, so that you can call `attempt()` again as if this was a new operation object.\n\n#### retryOperation.attempts()\n\nReturns an int representing the number of attempts it took to call `fn` before it was successful.\n\n## License\n\nretry is licensed under the MIT license.\n\n\n# Changelog\n\n0.10.0 Adding `stop` functionality, thanks to @maxnachlinger.\n\n0.9.0 Adding `unref` functionality, thanks to @satazor.\n\n0.8.0 Implementing retry.wrap.\n\n0.7.0 Some bug fixes and made retry.createTimeout() public. Fixed issues [#10](https://github.com/tim-kos/node-retry/issues/10), [#12](https://github.com/tim-kos/node-retry/issues/12), and [#13](https://github.com/tim-kos/node-retry/issues/13).\n\n0.6.0 Introduced optional timeOps parameter for the attempt() function which is an object having a property timeout in milliseconds and a property cb callback function. Whenever your retry operation takes longer than timeout to execute, the timeout callback function cb is called.\n\n0.5.0 Some minor refactoring.\n\n0.4.0 Changed retryOperation.try() to retryOperation.attempt(). Deprecated the aliases start() and try() for it.\n\n0.3.0 Added retryOperation.start() which is an alias for retryOperation.try().\n\n0.2.0 Added attempts() function and parameter to retryOperation.try() representing the number of attempts it took to call fn()."
}